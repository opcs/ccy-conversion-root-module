spring.application.name=currency-conversion-service
server.port=8100
ribbon.eager-load.enabled=true
#application-name.xxxx, client itself discover to communicate with two instances of it
#currency-exchange-service.ribbon.listOfServers=http://localhost:8000,http://localhost:8001


#lets eureka provide all the registered/available instances based on name during rest/feign call
eureka.client.service-url.default-zone=http://localhost:8761

#Sleuth: all the spans will be sent to the Zipkin server too.
spring.sleuth.sampler.probability=1.0

#Zipkin
spring.zipkin.service.name=zipkin
spring.zipkin.baseUrl=http://localhost:9411

#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.zipkin.rabbitmq.addresses=http://localhost:15672/


#logging
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
logging.file.path=.
logging.file.name=${spring.application.name}.log
logging.level.com.ms=DEBUG

#rabbit
#spring.rabbitmq.listener.direct.retry.enabled=true
#spring.rabbitmq.listener.simple.retry.enabled=true
#spring.rabbitmq.connection-timeout=60000

#spring.rabbitmq.password=guest
#spring.rabbitmq.username=guest
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=15672